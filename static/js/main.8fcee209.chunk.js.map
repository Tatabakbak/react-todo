{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","props","state","searchText","onInputChange","e","target","value","setState","onSearchChange","type","placeholder","onChange","this","Component","ItemStatusFilter","filter","onFilterChange","renderedButtons","name","label","map","key","onClick","TodoListItem","onDeleted","onToggleImportant","onToggleDone","classNames","important","title","TodoList","todos","items","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdded","App","curId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","val","toggleProperty","arr","prop","oldItem","newItem","toggleImportant","toggleDone","search","length","item","toLowerCase","indexOf","visibleItems","doneCount","todoCount","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.8fcee209.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\nexport default AppHeader;","import React from \"react\";\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        searchText: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onInputChange = (e) => {\r\n            const searchText = e.target.value;\r\n            this.setState({searchText});\r\n            this.props.onSearchChange(searchText);\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return <input type=\"text\"\r\n                      className=\"form-control search-input\"\r\n                      placeholder=\"Type here to search\"\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.searchText}/>;\r\n    };\r\n};\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\nexport default ItemStatusFilter;","import React from 'react';\r\nimport './item-status-filter.css';\r\n\r\nconst ItemStatusFilter = ({filter, onFilterChange}) => {\r\n\r\n    const buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    const renderedButtons = buttons.map(({name, label}) => {\r\n        const isSelected = filter === name;\r\n        const className = isSelected ? ' btn-info' : ' btn-outline-secondary';\r\n        return (\r\n            <button type=\"button\"\r\n                    className={`btn ${className}`}\r\n                    key={name}\r\n                    onClick={() => onFilterChange(name)}>\r\n                {label}\r\n            </button>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"btn-group\">\r\n            {renderedButtons}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default ItemStatusFilter;","import TodoListItem from \"./todo-list-item\";\r\nexport default TodoListItem;","import React from \"react\";\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({label, onDeleted, onToggleImportant, onToggleDone, done, important}) => {\r\n    let classNames = 'todo-list-item';\r\n    if (done) classNames += ' done';\r\n    if (important) classNames += ' important';\r\n\r\n    return (\r\n        <span className={classNames}>\r\n\r\n            <span\r\n                className=\"todo-list-item-label\"\r\n                onClick={onToggleDone}>\r\n                {label}\r\n            </span>\r\n\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={onToggleImportant}\r\n                    title=\"mark as important\">\r\n            <i className=\"fa fa-exclamation\"/>\r\n            </button>\r\n\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-danger btn-sm float-right\"\r\n                    onClick={onDeleted}\r\n                    title=\"delete\">\r\n                <i className=\"fa fa-trash-o\"/>\r\n            </button>\r\n\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;\r\n\r\n","import TodoList from \"../todo-list/todo-list\";\r\nexport default TodoList;","import React from \"react\";\r\nimport TodoListItem from \"../todo-list-item\";\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n\r\n    const items = todos.map(({id, ...itemProps}) => {\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem {...itemProps}\r\n                              onToggleImportant={() => onToggleImportant(id)}\r\n                              onToggleDone={() => onToggleDone(id)}\r\n                              onDeleted={() => onDeleted(id)}/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {items}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import ItemAddForm from \"./item-add-form\";\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onLabelChange = (e) => {\r\n            this.setState({label: e.target.value});\r\n        };\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (this.state.label) {\r\n                this.props.onAdded(this.state.label);\r\n                this.setState({label: ''})\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                  onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       id=\"newTaskInp\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"New task\"\r\n                       value={this.state.label}/>\r\n                <button className=\"btn btn-outline-info\">\r\n                    Add\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n};\r\n","import App from \"./app\";\r\nexport default App;","import React, {Component} from \"react\";\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemAddForm from \"../item-add-form\";\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    curId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink coffee'),\r\n            this.createTodoItem('Create app'),\r\n            this.createTodoItem('Do the laundry')\r\n        ],\r\n        searchText: '',\r\n        filter: 'all' //all, active, done\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.curId++\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.deleteItem = (id) => {\r\n            this.setState(({todoData}) => {\r\n                const idx = todoData.findIndex((el) => el.id === id);\r\n                const newData = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\r\n\r\n                return {\r\n                    todoData: newData\r\n                };\r\n            });\r\n        };\r\n\r\n        this.addItem = (val) => {\r\n            this.setState(({todoData}) => {\r\n                return {\r\n                    todoData: [...todoData, this.createTodoItem(val)]\r\n                };\r\n            });\r\n        };\r\n\r\n        this.toggleProperty = (arr, id, prop) => {\r\n            const idx = arr.findIndex((el) => el.id === id);\r\n            const oldItem = arr[idx];\r\n            const newItem = {...oldItem, [prop]: !oldItem[prop]}; //new property rewrites the old one\r\n            return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n        };\r\n\r\n        this.toggleImportant = (id) => {\r\n             this.setState(({todoData}) => {\r\n                 return {todoData: this.toggleProperty(todoData, id, 'important')};\r\n             });\r\n        };\r\n\r\n        this.toggleDone = (id) => {\r\n            this.setState(({todoData}) => {\r\n                return {todoData: this.toggleProperty(todoData, id, 'done')};\r\n            });\r\n        };\r\n\r\n        this.search = (arr, searchText) => {\r\n            if(searchText.length === 0)\r\n                return arr;\r\n          return arr.filter((item)=> item.label.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\r\n        };\r\n\r\n        this.onSearchChange = (searchText) => {\r\n            this.setState({searchText});\r\n        };\r\n\r\n        this.filter = (arr, filter) => {\r\n            switch (filter) {\r\n                case 'all':\r\n                    return arr;\r\n                case 'active':\r\n                    return arr.filter((item) => !item.done);\r\n                case 'done':\r\n                    return arr.filter((item) => item.done);\r\n                default:\r\n                    return arr;\r\n            }\r\n        };\r\n\r\n        this.onFilterChange = (filter) => {\r\n            this.setState({filter});\r\n        };\r\n\r\n    };\r\n\r\n    render() {\r\n        const {todoData, searchText, filter} = this.state;\r\n        const visibleItems = this.filter(this.search(todoData, searchText), filter);\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\r\n                    <ItemStatusFilter filter={filter} onFilterChange={this.onFilterChange}/>\r\n                </div>\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.toggleImportant}\r\n                          onToggleDone={this.toggleDone}/>\r\n                <ItemAddForm onAdded={this.addItem}/>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from \"./components/app\";\r\n\r\n//render обрабатывает элемент, не компонент!\r\nReactDom.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}